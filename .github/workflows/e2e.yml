name: End-to-End Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: khaledaun_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Playwright Browsers
      run: pnpm playwright:install

    - name: Setup Environment
      run: |
        cp .env.example .env.local
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/khaledaun_test" >> .env.local
        echo "NEXTAUTH_SECRET=test-secret-for-ci" >> .env.local
        echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local

    - name: Setup Database
      run: |
        pnpm db:generate
        pnpm db:push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/khaledaun_test

    - name: Build Applications
      run: pnpm build

    - name: Run E2E Tests
      run: pnpm test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/khaledaun_test
        NEXTAUTH_SECRET: test-secret-for-ci
        NEXTAUTH_URL: http://localhost:3000
        CI: true

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: test-results/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results/results.json
          test-results/results.xml
        retention-days: 30

  lighthouse:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build and Start Web App
      run: |
        pnpm build --filter=@khaledaun/web
        pnpm start --filter=@khaledaun/web &
        sleep 10
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/khaledaun_test

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true

  visual-regression:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Playwright Browsers
      run: pnpm playwright:install

    - name: Run Visual Regression Tests
      run: pnpm playwright test --project=visual-regression
      env:
        CI: true

    - name: Upload Visual Diff Report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: visual-regression-report
        path: test-results/visual-regression/
        retention-days: 30